version: "3"  # 📌 Version de la syntaxe docker-compose utilisée

services:
  # 🔹 Service MariaDB
  mariadb:
    build:                      # 🔨 Indique comment construire l'image
      context: ./requirements/mariadb  # 📁 Chemin vers le dossier contenant le Dockerfile
      dockerfile: Dockerfile          # 📄 Nom du Dockerfile
    container_name: mariadb     # 🧱 Nom personnalisé du conteneur
    env_file: .env              # 📦 Variables d'environnement à charger
    volumes:                    # 💾 Volume persistant pour les données MariaDB
      - mariadb_data:/var/lib/mysql
    networks:                   # 🌐 Réseau Docker (pour que les services puissent se voir)
      - inception
    restart: unless-stopped     # 🔁 Redémarre sauf si on l'arrête manuellement

  # 🔹 Service WordPress (avec PHP-FPM)
  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress_data:/var/www/html  # 📁 Dossier partagé contenant les fichiers WP
    networks:
      - inception
    depends_on:
      - mariadb               # ⏳ Lance WordPress uniquement si MariaDB est prêt
    restart: unless-stopped

  # 🔹 Service NGINX
  nginx:
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    container_name: nginx
    env_file: .env
    ports:
      - "443:443"             # 🌍 Port HTTPS exposé localement
    volumes:
      - wordpress_data:/var/www/html  # 📁 Partage les fichiers WordPress avec NGINX
    networks:
      - inception
    depends_on:
      - adminer              # ⏳ NGINX attend que Adminer soit prêt
      - wordpress             # ⏳ NGINX attend que WordPress soit prêt
    restart: unless-stopped
  
  # Service ADMINER
  adminer:
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile
    env_file: .env
    container_name: adminer
    restart: unless-stopped
    ports:
      - "8080:8080"         # 🌍 Port Adminer exposé localement
    networks:
      - inception
    depends_on:
      - mariadb            # ⏳ Adminer attend que MariaDB soit prêt

  # Service Redis
  redis:
    build:
      context: ./requirements/redis
      dockerfile: Dockerfile
    container_name: redis
    env_file: .env
    networks:
      - inception
    restart: unless-stopped

  # Service REDIS COMMANDER (Redis GUI)
  redis-commander:
    build:
      context: ./requirements/redis-commander
      dockerfile: Dockerfile
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "8082:8082"
    networks:
      - inception
    depends_on:
      - redis

volumes:
  mariadb_data:
    driver: local             # 🛠️ Stocke les données localement
    driver_opts:
      type: none
      o: bind
      device: ${SQL_DATA_PATH}   # 📍 Point de montage sur l’hôte

  wordpress_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WP_DATA_PATH}      # 📍 Dossier de persistance WordPress

# 🔸 Réseau personnalisé pour que les containers puissent communiquer
networks:
  inception:
    driver: bridge            # 🧭 Réseau bridge : tous les conteneurs partagent un réseau isolé
